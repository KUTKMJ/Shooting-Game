#include "Header.h"
#include "MyPlaneForm.h"
#include "Bullet.h"
#include "EnemyPlaneForm.h"
static int g_nScreenIndex;
static HANDLE g_hScreen[2]; // 스크린 버퍼 두 개 (전면, 후면) 선언
void ScreenInit()
{
	CONSOLE_CURSOR_INFO cci;

	//전면 버퍼 후면 버퍼 2개의 가상 콘솔 창 버퍼를 만듦.
	g_hScreen[0] = CreateConsoleScreenBuffer(GENERIC_READ | GENERIC_WRITE, 0, NULL, CONSOLE_TEXTMODE_BUFFER, NULL);
	g_hScreen[1] = CreateConsoleScreenBuffer(GENERIC_READ | GENERIC_WRITE, 0, NULL, CONSOLE_TEXTMODE_BUFFER, NULL);
	//커서 숨기기
	cci.dwSize = 1;
	cci.bVisible = FALSE;
	SetConsoleCursorInfo(g_hScreen[0], &cci);
	SetConsoleCursorInfo(g_hScreen[1], &cci);
}

void ScreenFlipping() { // 페이지 플리핑
	Sleep(10);
	SetConsoleActiveScreenBuffer(g_hScreen[g_nScreenIndex]);
	g_nScreenIndex = !g_nScreenIndex;
}

void ScreenClear() {
	COORD Coor = { 0,0 };
	DWORD dw;
	FillConsoleOutputCharacter(g_hScreen[g_nScreenIndex], '', 80 * 25, Coor, &dw);
}

void ScreenRelease() {
	CloseHandle(g_hScreen[0]);
	CloseHandle(g_hScreen[1]);
}

void ScreenPrint(int x, int y, char *string) {
	DWORD dw;
	COORD CursorPosition = { x,y };
	SetConsoleCursorPosition(g_hScreen[g_nScreenIndex], CursorPosition);
	WriteFile(g_hScreen[g_nScreenIndex], string, strlen(string), &dw, NULL);
}

void SetColor(unsigned short color) {
	{
		SetConsoleTextAttribute(g_hScreen[g_nScreenIndex], color);
	}
}

int main(void) {
	background();
}


